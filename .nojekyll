<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>CYPX ONLINE CRYPTO - Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

    <!-- Firebase SDK (compat version) -->
    <script src="https://www.gstatic.com/firebasejs/9.6.10/firebase-compat.js"></script>
    <script>
      const firebaseConfig = {
        apiKey: "AIzaSyCCW4G9JlVu_xb0bGjlKmsi5mdqXSwvFak",
        authDomain: "quantum-rio.firebaseapp.com",
        databaseURL: "https://quantum-rio-default-rtdb.firebaseio.com",
        projectId: "quantum-rio",
        storageBucket: "quantum-rio.firebasestorage.app",
        messagingSenderId: "805433999377",
        appId: "1:805433999377:web:d0efa8c46ec4a0fa30f1b0",
        measurementId: "G-4RSQXZJX44"
      };
      firebase.initializeApp(firebaseConfig);
      const database = firebase.database();
      const auth = firebase.auth();
    </script>

    <style>
      body {
        margin: 0;
        font-family: Arial, sans-serif;
        background-color: #001f3f;
        color: white;
      }
      header {
        background-color: #002f6c;
        padding: 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .announcement {
        background-color: #00274d;
        color: #fff700;
        padding: 10px;
        white-space: nowrap;
        overflow: hidden;
        box-sizing: border-box;
        border-top: 1px solid #003;
        border-bottom: 1px solid #003;
        cursor: pointer;
      }
      .announcement-content {
        display: inline-block;
        padding-left: 100%;
        animation: scroll-left 15s linear infinite;
      }
      @keyframes scroll-left {
        0% { transform: translateX(0); }
        100% { transform: translateX(-100%); }
      }
      .balance-section {
        padding: 20px;
        background-color: #002b5c;
        text-align: center;
      }
      .balance-section .email {
        font-size: 14px;
        color: #ffa500;
      }
      .balance-section .balance {
        font-size: 24px;
        margin: 10px 0;
        color: yellow;
      }
      .balance-buttons {
        display: flex;
        justify-content: space-around;
      }
      .balance-buttons button {
        background-color: #ffcc00;
        color: black;
        padding: 10px;
        border: none;
        border-radius: 8px;
        font-weight: bold;
        width: 100px;
        display: flex;
        flex-direction: column;
        align-items: center;
        cursor: pointer;
      }
      .balance-buttons button i {
        font-size: 20px;
        margin-bottom: 5px;
      }
      .extra-info {
        padding: 15px;
        text-align: center;
      }
      .extra-info img {
        max-width: 90%;
        border-radius: 8px;
        margin-bottom: 15px;
      }
      .extra-info p {
        font-size: 14px;
        margin: 10px 0;
      }
      .claim-btn {
        background-color: #ffcc00;
        color: black;
        padding: 8px 20px;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        cursor: pointer;
      }
      .popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #28a745;
        color: white;
        padding: 20px;
        border-radius: 10px;
        font-weight: bold;
        z-index: 9999;
        max-width: 80%;
        text-align: center;
      }
      .popup.red {
        background-color: #cc0000;
      }
      .task-countdown {
        background-color: #001a33;
        text-align: center;
        padding: 10px;
        font-weight: bold;
        color: #ffcc00;
      }

      /* Earnings breakdown card */
      .earnings-card {
        margin: 12px;
        padding: 12px;
        background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
        border-radius: 10px;
        border: 1px solid rgba(255,255,255,0.03);
      }
      .earnings-card h3 {
        margin: 0 0 8px 0;
        color: #ffd965;
      }
      .earnings-list {
        max-height: 160px;
        overflow-y: auto;
        padding: 6px 0;
      }
      .earnings-list .row {
        display:flex;
        justify-content:space-between;
        padding:6px 0;
        border-bottom:1px dashed rgba(255,255,255,0.03);
        color: #cfe6ff;
      }
      .earnings-total {
        text-align:right;
        font-weight:700;
        margin-top:8px;
        color: #fff;
      }

      .vip-list {
        padding: 10px;
      }
      .vip-box {
        background-color: #003366;
        margin: 10px 0;
        padding: 10px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: space-between;
      }
      .vip-box img {
        height: 50px;
        margin-right: 10px;
      }
      .vip-box .info {
        flex-grow: 1;
      }
      .vip-box .info p {
        margin: 0;
      }
      .vip-box .info .amount {
        font-weight: bold;
        color: yellow;
      }
      .vip-box .arrow {
        font-size: 24px;
        color: white;
        cursor: pointer;
      }
      .vip-images {
        display: flex;
        justify-content: center;
        gap: 10px;
        padding: 20px 10px 80px;
      }
      .vip-images img {
        width: 48%;
        border-radius: 10px;
      }
      nav {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: #002244;
        display: flex;
        justify-content: space-around;
        padding: 10px 0;
      }
      nav a {
        color: white;
        text-align: center;
        text-decoration: none;
      }
      nav i {
        font-size: 20px;
      }
      #announcementModal {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: white;
        color: #002f6c;
        padding: 20px;
        overflow-y: scroll;
      }
      #announcementModal button {
        margin-top: 20px;
        margin-bottom: 40px;
        padding: 10px 20px;
        background-color: #ffcc00;
        border: none;
        font-weight: bold;
        cursor: pointer;
        border-radius: 5px;
      }

      /* small helper for style */
      .small-muted { color: #9fb0cf; font-size:13px; }
    </style>
  </head>
  <body>
    <header>
      <div style="display: flex; align-items: center; gap: 10px;">
        <img src="https://png.pngtree.com/png-clipart/20221216/original/pngtree-vip-icon-design-png-image_8749175.png" alt="Logo" style="height: 30px;" />
        <h2 style="margin: 0;">CYPX ONLINE CRYPTO</h2>
      </div>
    </header>
    <div class="announcement" id="ann-btn">
      <div class="announcement-content">üõíWelcome to CYPX ONLINE CRYPTO üõí Recruiting investors and agents worldwide!</div>
    </div>

    <div class="balance-section">
      <div class="email" id="user-email"></div>
      <div class="balance" id="user-balance">Balance: KSh 0.00</div>
      <div class="balance-buttons">
        <button onclick="location.href='recharge.html'"><i class="fas fa-wallet"></i>Deposit</button>
        <button onclick="location.href='withdraw.html'"><i class="fas fa-hand-holding-usd"></i>Withdraw</button>
        <button onclick="location.href='company.html'"><i class="fas fa-building"></i>Company</button>
      </div>
    </div>

    <div class="extra-info">
      <img src="https://media.istockphoto.com/id/841526170/photo/three-business-people-in-the-office-working-together.jpg?s=170667a&w=0&k=20&c=58v5HeRzpzV3qusfD33JuF0j4Am5rbBYhkc37ozCv84=">
      <p>
        Improve VIP task rules on the same day. Upgrading the VIP level on the same day allows you to complete multiple tasks without restrict. Listed as: You are now VIP1 and have completed today's task. You can upgrade to VIP2 to continue completing VIP2 tasks. If you continue to upgrade to VIP3, you can continue to complete the tasks of VIP3. „ÄêSimilar to this, the highest level of VIP is VIP10„Äë
      </p>
      <button class="claim-btn" id="claim-btn">Claim 250.00 KSH</button>
    </div>

    <div class="task-countdown">Task Reset Countdown: <span id="countdown"></span></div>

    <!-- Earnings card (breakdown) -->
    <div class="earnings-card" id="earnings-card">
      <h3>VIP Earnings Breakdown</h3>
      <div class="small-muted">Shows earnings from all VIP levels (calculated from days claimed √ó simple interest)</div>
      <div class="earnings-list" id="earnings-list">
        <!-- filled dynamically -->
      </div>
      <div class="earnings-total" id="vip-grand-total">Total VIP Earnings: KSH 0.00</div>
    </div>

    <div class="vip-list" id="vip-list"></div>
    <div class="vip-images">
      <img src="https://media.istockphoto.com/id/178447404/photo/modern-business-buildings.jpg?s=612x612&w=0&k=20&c=MOG9lvRz7WjsVyW3IiQ0srEzpaBPDcc7qxYsBCvAUJs=" alt="VIP Banner 1">
      <img src="https://images.unsplash.com/photo-1531973576160-7125cd663d86?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8Y29tcGFueXxlbnwwfHwwfHx8MA%3D%3D" alt="VIP Banner 2">
    </div>

    <nav>
      <a href="dashboard.html"><i class="fas fa-home"></i><br>Home</a>
      <a href="task.html"><i class="fas fa-tasks"></i><br>Task</a>
      <a href="team.html"><i class="fas fa-users"></i><br>Team</a>
      <a href="vip.html"><i class="fas fa-crown"></i><br>VIP</a>
      <a href="profile.html"><i class="fas fa-user"></i><br>Me</a>
    </nav>

    <div id="announcementModal">
      <h3>üõíWelcome to CYPX ONLINE CRYPTO üõí</h3>
      <pre style="white-space: pre-wrap; font-size: 14px;">
üí≤CYPX ONLINE CRYPTO 2025 is a formal and legal long-term platformüí≤
... (content unchanged) ...
      </pre>
      <button onclick="closeAnnouncement()">Close</button>
    </div>

    <script>
  window.onload = function () {
    auth.onAuthStateChanged(function(user) {
      if (user) {
        const uid = user.uid;
        const userEmail = user.email;
        document.getElementById("user-email").textContent = userEmail;

        const balanceRef = database.ref("users/" + uid + "/balance");
        const vipRef = database.ref("users/" + uid + "/vipLevels");
        const claimedRef = database.ref("users/" + uid + "/hasClaimedBonus");
        const vipClaimsRef = database.ref("users/" + uid + "/vipClaims");

        // VIP simple interest (same values used on VIP page)
        const vipSimpleInterest = {
          1: 750, 2: 1250, 3: 2750, 4: 5250, 5: 9375,
          6: 18750, 7: 28250, 8: 37750, 9: 50000, 10: 62500
        };

        // Sync balance in real time
        balanceRef.on("value", (snapshot) => {
          let balance = parseFloat(snapshot.val() || 0);
          document.getElementById("user-balance").textContent = `Balance: KSh ${balance.toFixed(2)}`;
        });

        // Handle claim bonus (unchanged)
        const claimBtn = document.getElementById("claim-btn");
        claimedRef.once("value").then((snap) => {
          const claimed = snap.val() === true;
          if (claimed) {
            claimBtn.textContent = "Completed";
            claimBtn.disabled = true;
          }

          claimBtn.onclick = function () {
            if (claimBtn.disabled) return;

            balanceRef.once("value").then((b) => {
              let currentBalance = parseFloat(b.val() || 0);
              const newBalance = currentBalance + 250;

              balanceRef.set(newBalance.toFixed(2));
              claimedRef.set(true);

              claimBtn.textContent = "Completed";
              claimBtn.disabled = true;
              showPopup("250 KSh successfully Claimed");
            });
          };
        });

        // Render VIP list and handle arrow clicks & messages
        function renderVIPList() {
          const list = document.getElementById("vip-list");
          list.innerHTML = "";

          vipRef.once("value").then((snap) => {
            const unlocked = snap.val() || [];

            const vipData = [3000,5000,11000,21000,36000,75000,113000,151000,200000,250000];

            vipData.forEach((amt, idx) => {
              const lvl = idx + 1;
              const div = document.createElement("div");
              div.className = "vip-box";
              div.innerHTML = `
                <img src="https://png.pngtree.com/png-clipart/20221216/original/pngtree-vip-icon-design-png-image_8749175.png">
                <div class="info">
                  <p>Unlock amount: <span class="amount">KSh ${amt.toFixed(2)}</span></p>
                  <p>${unlocked.includes(lvl) ? "‚úÖ" : "üîê"} VIP${lvl}</p>
                </div>
                <div class="arrow">¬ª</div>
              `;

              // arrow click behavior:
              // If unlocked => show "This VIP level has been unlocked"
              // else => show the recharge popup message (original behavior)
              div.querySelector(".arrow").onclick = () => {
                if (unlocked.includes(lvl)) {
                  showPopup("This VIP level has been unlocked");
                } else {
                  showPopup("Please unlock your VIP levels first", true);
                }
              };

              list.appendChild(div);
            });
          });
        }

        renderVIPList();

        // VIP earnings breakdown: listen to vipClaims and compute totals
        function renderEarnings() {
          const earningsList = document.getElementById("earnings-list");
          const grandTotalEl = document.getElementById("vip-grand-total");
          earningsList.innerHTML = '';
          let grandTotal = 0;

          // read vipClaims snapshot once and compute
          vipClaimsRef.once("value").then(snap => {
            const claims = snap.val() || {};

            // iterate 1..10
            for (let i = 1; i <= 10; i++) {
              const days = (claims[i] && claims[i].daysClaimed) ? Number(claims[i].daysClaimed) : 0;
              const perDay = vipSimpleInterest[i] || 0;
              const earned = days * perDay;
              grandTotal += earned;

              const row = document.createElement('div');
              row.className = 'row';
              row.innerHTML = `<div>VIP ${i}</div><div>KSH ${earned.toLocaleString()}</div>`;
              earningsList.appendChild(row);
            }

            grandTotalEl.textContent = `Total VIP Earnings: KSH ${grandTotal.toLocaleString()}`;
          });
        }

        // real-time updates for vipClaims ‚Äî update breakdown on every change
        vipClaimsRef.on("value", function() {
          renderEarnings();
        });

        // Countdown timer (unchanged)
        function startCountdown() {
          const countdown = document.getElementById("countdown");
          let start = localStorage.getItem("countdownStart");
          if (!start) {
            start = Date.now();
            localStorage.setItem("countdownStart", start);
          }

          function update() {
            const now = Date.now();
            let diff = 86400000 - (now - start);
            if (diff <= 0) {
              start = Date.now();
              localStorage.setItem("countdownStart", start);
              diff = 86400000;
            }
            const h = Math.floor(diff / 3600000),
                  m = Math.floor((diff % 3600000) / 60000),
                  s = Math.floor((diff % 60000) / 1000);
            countdown.textContent = `${h.toString().padStart(2,'0')}:${m.toString().padStart(2,'0')}:${s.toString().padStart(2,'0')}`;
          }

          setInterval(update, 1000);
        }

        startCountdown();

      } else {
        // Not logged in, redirect
        window.location.href = "landing.html";
      }
    });

    // Announcement modal logic
    document.getElementById("ann-btn").onclick = function () {
      document.getElementById("announcementModal").style.display = "block";
    };
    document.querySelector("#announcementModal button").onclick = function () {
      document.getElementById("announcementModal").style.display = "none";
    };

    function showPopup(msg, red = false) {
      // create popup element and auto-remove
      const popup = document.createElement("div");
      popup.className = "popup" + (red ? " red" : "");
      popup.textContent = msg;
      document.body.appendChild(popup);
      setTimeout(() => popup.remove(), 3000);
    }

    function closeAnnouncement() {
      document.getElementById("announcementModal").style.display = "none";
    }
  };
</script>
</body>
</html>
